// <auto-generated />
using System;
using MVC_D2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_D2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230802223350_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_D2.Models.Emp_proj", b =>
                {
                    b.Property<int>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<int>("Proj_Id")
                        .HasColumnType("int");

                    b.Property<int>("WorkingHours")
                        .HasColumnType("int");

                    b.HasKey("Emp_Id", "Proj_Id");

                    b.HasIndex("Proj_Id");

                    b.ToTable("emp_proj");
                });

            modelBuilder.Entity("MVC_D2.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Off_Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Off_Id");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("MVC_D2.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("office");
                });

            modelBuilder.Entity("MVC_D2.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("project");
                });

            modelBuilder.Entity("MVC_D2.Models.Emp_proj", b =>
                {
                    b.HasOne("MVC_D2.Models.Employee", "employee")
                        .WithMany("emp_Projs")
                        .HasForeignKey("Emp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_D2.Models.Project", "project")
                        .WithMany("emp_Projs")
                        .HasForeignKey("Proj_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("MVC_D2.Models.Employee", b =>
                {
                    b.HasOne("MVC_D2.Models.Office", "office")
                        .WithMany("employees")
                        .HasForeignKey("Off_Id");

                    b.Navigation("office");
                });

            modelBuilder.Entity("MVC_D2.Models.Employee", b =>
                {
                    b.Navigation("emp_Projs");
                });

            modelBuilder.Entity("MVC_D2.Models.Office", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("MVC_D2.Models.Project", b =>
                {
                    b.Navigation("emp_Projs");
                });
#pragma warning restore 612, 618
        }
    }
}
